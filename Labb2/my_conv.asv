function [im_out] = my_conv(im_in, kernel)
    % im_out = my_conv(im_in, kernel) convolves the input image im_in
    % with the filter kernel and returns the result in im_out
    % im_in, im_out, and kernel are of double precision
    
    [k_row, k_column] = size(kernel);
    round_row = round(k_row/2);
    round_column = round(k_column/2);
    
    im_in = padarray(im_in,[round_row-1 round_column-1],0);
    [i_row, i_column] = size(im_in);
  
    im_out = zeros(size(im_in));
    temp = zeros(size(kernel));

    for i = 2:i_row-1
        for j = 2:i_column-1
            for s = 1:k_row
                for k = 1:k_column
                    temp(s,k) = kernel(s,k) * im_in(i-round_row+s,j-round_column+k);
                end
            end
            im_out(i,j) = sum(temp(:));
        end
    end
end

% g1 = kernel(1,1) * im_in(i-1,j-1);
% g2 = kernel(1,2) * im_in(i-1,j);
% g3 = kernel(1,3) * im_in(i-1,j+1);
% g4 = kernel(2,1) * im_in(i,j-1);
% g5 = kernel(2,2) * im_in(i,j);
% g6 = kernel(2,3) * im_in(i,j+1);
% g7 = kernel(3,1) * im_in(i+1,j-1);
% g8 = kernel(3,2) * im_in(i-1,j);
% g9 = kernel(3,3) * im_in(i+1,j+1);
% im_out(i,j) = g1+g2+g3+g4+g5+g6+g7+g8+g9;